<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
						 xmlns:appControls="clr-namespace:Carina.PixelViewer.Controls"
						 xmlns:appConverters="clr-namespace:Carina.PixelViewer.Data.Converters"
						 xmlns:appImageRenderers="clr-namespace:Carina.PixelViewer.Media.ImageRenderers"
						 xmlns:appMedia="clr-namespace:Carina.PixelViewer.Media"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Carina.PixelViewer.Controls.SessionControl">
	<!-- Resources -->
	<UserControl.Resources>

		<!-- Evaluate image dimensions -->
		<ContextMenu x:Key="evaluateImageDimensionsMenu">
			<MenuItem Command="{Binding EvaluateImageDimensionsCommand}" CommandParameter="{x:Static appMedia:AspectRatio.Unknown}" Header="{DynamicResource String.AspectRatio.Unknown}"/>
			<Separator/>
			<MenuItem Command="{Binding EvaluateImageDimensionsCommand}" CommandParameter="{x:Static appMedia:AspectRatio.Ratio_4x3}" Header="4:3"/>
			<MenuItem Command="{Binding EvaluateImageDimensionsCommand}" CommandParameter="{x:Static appMedia:AspectRatio.Ratio_16x9}" Header="16:9"/>
			<MenuItem Command="{Binding EvaluateImageDimensionsCommand}" CommandParameter="{x:Static appMedia:AspectRatio.Ratio_3x2}" Header="3:2"/>
			<MenuItem Command="{Binding EvaluateImageDimensionsCommand}" CommandParameter="{x:Static appMedia:AspectRatio.Ratio_1x1}" Header="1:1"/>
			<Separator/>
			<MenuItem Command="{Binding EvaluateImageDimensionsCommand}" CommandParameter="{x:Static appMedia:AspectRatio.Ratio_3x4}" Header="3:4"/>
			<MenuItem Command="{Binding EvaluateImageDimensionsCommand}" CommandParameter="{x:Static appMedia:AspectRatio.Ratio_9x16}" Header="9:16"/>
			<MenuItem Command="{Binding EvaluateImageDimensionsCommand}" CommandParameter="{x:Static appMedia:AspectRatio.Ratio_2x3}" Header="2:3"/>
		</ContextMenu>
		
	</UserControl.Resources>

	<!-- Content -->
	<Grid>

		<!-- Columns -->
		<Grid.ColumnDefinitions>
			<ColumnDefinition MinWidth="300" Width="*"/>
			<ColumnDefinition Width="{StaticResource GridLength.GridSplitter.Thickness}"/>
			<ColumnDefinition MinWidth="300" Width="300"/>
		</Grid.ColumnDefinitions>

		<!-- Image viewer, tool bar, status bar -->
		<Grid RowDefinitions="*,Auto">

			<!-- Image viewer -->
			<Grid DragDrop.AllowDrop="True">

				<!-- Drag-drop hint -->
				<Border Classes="SessionControl_DragDropHint" IsVisible="{Binding !IsSourceFileOpened}">
					<StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center">
						<TextBlock Classes="SessionControl_DragDropHint" Text="{DynamicResource String.SessionControl.DragDropHint.Section1}"/>
						<Image Classes="SessionControl_DragDropHint"/>
						<TextBlock Classes="SessionControl_DragDropHint" Text="{DynamicResource String.SessionControl.DragDropHint.Section2}"/>
					</StackPanel>
				</Border>

				<!-- Insufficient memory hint -->
				<Border Classes="SessionControl_InsufficientMemoryForRenderedImageHint" IsVisible="{Binding InsufficientMemoryForRenderedImage}">
					<StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center">
						<Image Classes="SessionControl_InsufficientMemoryForRenderedImageHint"/>
						<TextBlock Classes="SessionControl_InsufficientMemoryForRenderedImageHint" Text="{DynamicResource String.SessionControl.InsufficientMemoryForRenderedImageHint}"/>
					</StackPanel>
				</Border>

				<!-- Image -->
				<ScrollViewer x:Name="imageScrollViewer" AllowAutoHide="False" HorizontalScrollBarVisibility="{Binding !FitRenderedImageToViewport, Converter={x:Static appControls:SessionControl.BooleanToScrollBarVisibilityConverter}}" PointerPressed="OnImageScrollViewerPointerPressed" VerticalScrollBarVisibility="{Binding !FitRenderedImageToViewport, Converter={x:Static appControls:SessionControl.BooleanToScrollBarVisibilityConverter}}">
					<LayoutTransformControl Classes="SessionControl_ImageViewer">
						<Border>
							<Viewbox x:Name="imageViewbox" Stretch="{Binding FitRenderedImageToViewport, Converter={x:Static appControls:SessionControl.BooleanToMediaStretchConverter}}">
								<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
									<Border>
										<Border.Background>
											<ImageBrush DestinationRect="0,0,100,100" Source="/Resources/RenderedImageBackground.png" TileMode="Tile"/>
										</Border.Background>
									</Border>
									<Image x:Name="image" PointerLeave="OnImagePointerLeave" PointerMoved="OnImagePointerMoved" Source="{Binding RenderedImage}"/>
								</Grid>
							</Viewbox>
						</Border>
						<LayoutTransformControl.LayoutTransform>
							<TransformGroup>
								<ScaleTransform ScaleX="{Binding $parent[UserControl].EffectiveRenderedImageScale}" ScaleY="{Binding $parent[UserControl].EffectiveRenderedImageScale}"/>
								<RotateTransform Angle="{Binding EffectiveRenderedImageRotation}"/>
							</TransformGroup>
						</LayoutTransformControl.LayoutTransform>
					</LayoutTransformControl>
				</ScrollViewer>

				<!-- Rendering image indicator -->
				<Border Classes="SessionControl_RenderingImage" HorizontalAlignment="Stretch" IsVisible="{Binding IsRenderingImage}" VerticalAlignment="Stretch">
					<TextBlock Classes="SessionControl_RenderingImage" HorizontalAlignment="Center" Text="{DynamicResource String.SessionControl.RenderingImage}" VerticalAlignment="Center"/>
				</Border>

			</Grid>

			<!-- Tool bar -->
			<Border Classes="SessionControl_ImageToolBar" HorizontalAlignment="Center" VerticalAlignment="Bottom">
				<StackPanel Orientation="Horizontal">

					<!-- Open file -->
					<Button Classes="SessionControl_ImageToolBarButton" Command="{Binding $parent[UserControl].OpenSourceFileCommand}" ToolTip.Tip="{DynamicResource String.SessionControl.OpenSourceFile}">
						<Image Classes="SessionControl_ImageToolBar_OpenSourceFile"/>
					</Button>

					<!-- Save rendered image -->
					<Button Classes="SessionControl_ImageToolBarButton" Command="{Binding $parent[UserControl].SaveRenderedImageCommand}" ToolTip.Tip="{DynamicResource String.SessionControl.SaveRenderedImage}">
						<Image Classes="SessionControl_ImageToolBar_SaveRenderedImage"/>
					</Button>

					<!-- Separator -->
					<Separator Classes="SessionControl_ImageToolBar"/>

					<!-- Fit to viewport -->
					<ToggleButton Classes="SessionControl_ImageToolBarButton" IsChecked="{Binding FitRenderedImageToViewport, Mode=TwoWay}" IsEnabled="{Binding IsSourceFileOpened}" ToolTip.Tip="{DynamicResource String.SessionControl.FitRenderedImageToViewport}">
						<Image Classes="SessionControl_ImageToolBar_FitRenderedImageToViewport"/>
					</ToggleButton>
					
					<!-- Zoom-out -->
					<Button Classes="SessionControl_ImageToolBarButton" Command="{Binding ZoomOutCommand}" ToolTip.Tip="{DynamicResource String.SessionControl.ZoomOut}">
						<Image Classes="SessionControl_ImageToolBar_ZoomOut"/>
					</Button>
					
					<!-- Zoom & rotation -->
					<StackPanel Orientation="Vertical" VerticalAlignment="Center">
						<TextBlock Classes="SessionControl_ImageToolBarText" HorizontalAlignment="Center" Text="{Binding RenderedImageScale, Converter={x:Static appConverters:RatioToPercentageConverter.Default}}"/>
						<TextBlock Classes="SessionControl_ImageToolBarText" HorizontalAlignment="Center" Text="{Binding EffectiveRenderedImageRotation, Converter={x:Static appConverters:DegreesToStringConverter.Default}}"/>
					</StackPanel>
					
					<!-- Zoom-in -->
					<Button Classes="SessionControl_ImageToolBarButton" Command="{Binding ZoomInCommand}" ToolTip.Tip="{DynamicResource String.SessionControl.ZoomIn}">
						<Image Classes="SessionControl_ImageToolBar_ZoomIn"/>
					</Button>

					<!-- Separator -->
					<Separator Classes="SessionControl_ImageToolBar"/>

					<!-- Rotate-left -->
					<Button Classes="SessionControl_ImageToolBarButton" Command="{Binding RotateLeftCommand}" ToolTip.Tip="{DynamicResource String.SessionControl.RotateLeft}">
						<Image Classes="SessionControl_ImageToolBar_RotateLeft"/>
					</Button>

					<!-- Rotate-right -->
					<Button Classes="SessionControl_ImageToolBarButton" Command="{Binding RotateRightCommand}" ToolTip.Tip="{DynamicResource String.SessionControl.RotateRight}">
						<Image Classes="SessionControl_ImageToolBar_RotateRight"/>
					</Button>

				</StackPanel>
			</Border>

			<!-- Status bar -->
			<Border Classes="SessionControl_StatusBar" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
				<Grid ColumnDefinitions="*,Auto">

					<!-- File name -->
					<TextBlock Classes="SessionControl_StatusBar" IsVisible="{Binding !IsSourceFileOpened}" Text="{DynamicResource String.SessionControl.NoSourceFileOpened}" TextTrimming="CharacterEllipsis"/>
					<TextBlock Classes="SessionControl_StatusBar" IsVisible="{Binding IsSourceFileOpened}" TextTrimming="CharacterEllipsis">
						<TextBlock.Text>
							<MultiBinding StringFormat="{}{0} ({1})">
								<Binding Path="SourceFileName"/>
								<Binding Path="SourceFileSizeString"/>
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
					
					<!-- Selected pixel position -->
					<StackPanel Grid.Column="1" Opacity="{Binding HasSelectedRenderedImagePixel, Converter={x:Static appConverters:BooleanToDoubleConverter.Default}}" Orientation="Horizontal">

						<!-- Position -->
						<TextBlock Classes="SessionControl_StatusBar" Text="{DynamicResource String.SessionControl.SelectedRenderecImagePixelPosition}"/>
						<TextBlock Classes="SessionControl_StatusBar">
							<TextBlock.Text>
								<MultiBinding StringFormat="{}({0},{1})">
									<Binding Path="SelectedRenderedImagePixelPositionX"/>
									<Binding Path="SelectedRenderedImagePixelPositionY"/>
								</MultiBinding>
							</TextBlock.Text>
						</TextBlock>

						<!-- Color -->
						<TextBlock Classes="SessionControl_StatusBar" Text="  "/>
						<TextBlock Classes="SessionControl_StatusBar" Text="{DynamicResource String.SessionControl.SelectedRenderecImagePixelColor}"/>
						<TextBlock Classes="SessionControl_StatusBar">
							<TextBlock.Text>
								<MultiBinding StringFormat="{}#{0:X2}{1:X2}{2:X2}{3:X2}">
									<Binding Path="SelectedRenderedImagePixelColor.A"/>
									<Binding Path="SelectedRenderedImagePixelColor.R"/>
									<Binding Path="SelectedRenderedImagePixelColor.G"/>
									<Binding Path="SelectedRenderedImagePixelColor.B"/>
								</MultiBinding>
							</TextBlock.Text>
						</TextBlock>
						
					</StackPanel>
					
				</Grid>
			</Border>

		</Grid>

		<!-- Options panel -->
		<Border Grid.Column="1" Grid.ColumnSpan="2" Classes="SessionControl_OptionsPanel">
			<ScrollViewer HorizontalScrollBarVisibility="Disabled">
				<StackPanel Classes="SessionControl_OptionsPanel">

					<!-- Profile -->
					<TextBlock Classes="SessionControl_OptionsPanel_Item" Text="{DynamicResource String.SessionControl.Profile}"/>
					<ComboBox Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" Items="{Binding Profiles}" SelectedItem="{Binding Profile, Mode=TwoWay}">
						<ComboBox.DataTemplates>
							<DataTemplate>
								<TextBlock Text="{Binding Name}"/>
							</DataTemplate>
						</ComboBox.DataTemplates>
					</ComboBox>
					<Border Classes="SessionControl_OptionsPanel_Separator"/>

					<!-- Image renderer -->
					<TextBlock Classes="SessionControl_OptionsPanel_Item" Text="{DynamicResource String.SessionControl.ImageRenderer}"/>
					<ComboBox Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" Items="{x:Static appImageRenderers:ImageRenderers.All}" SelectedItem="{Binding ImageRenderer, Mode=TwoWay}">
						<ComboBox.DataTemplates>
							<DataTemplate DataType="{x:Type appImageRenderers:IImageRenderer}">
								<TextBlock Text="{Binding Format.DisplayName}"/>
							</DataTemplate>
						</ComboBox.DataTemplates>
					</ComboBox>
					<Border Classes="SessionControl_OptionsPanel_Separator"/>

					<!-- Dimensions -->
					<TextBlock Classes="SessionControl_OptionsPanel_Item" Text="{DynamicResource String.SessionControl.ImageDimensions}"/>
					<Grid ColumnDefinitions="*,Auto,*">
						<NumericUpDown Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" Maximum="65535" Minimum="1" Value="{Binding ImageWidth, Mode=TwoWay}"/>
						<TextBlock Grid.Column="1" Text=" × " VerticalAlignment="Center"/>
						<NumericUpDown Classes="SessionControl_OptionsPanel_Item" Grid.Column="2" IsEnabled="{Binding IsSourceFileOpened}" Maximum="65535" Minimum="1" Value="{Binding ImageHeight, Mode=TwoWay}"/>
					</Grid>
					<Button Classes="SessionControl_OptionsPanel_Item" Command="{Binding $parent[UserControl].ShowEvaluateImageDimensionsMenuCommand}" Content="{DynamicResource String.SessionControl.EvaluateImageDimensions}" IsEnabled="{Binding CanChangeImageRenderer}"/>
					<Border Classes="SessionControl_OptionsPanel_Separator"/>

					<!-- Plane options #1 -->
					<Expander Classes="SessionControl_OptionsPanel_Item" Header="{DynamicResource String.SessionControl.ImagePlaneOptions.1}" IsExpanded="True" IsVisible="{Binding HasImagePlane1}">
						<StackPanel Orientation="Vertical">
							<TextBlock Classes="SessionControl_OptionsPanel_Item" Text="{DynamicResource String.SessionControl.RowStride}"/>
							<NumericUpDown Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" Value="{Binding RowStride1, Mode=TwoWay}"/>
							<TextBlock Classes="SessionControl_OptionsPanel_Item" Text="{DynamicResource String.SessionControl.PixelStride}"/>
							<NumericUpDown Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" Value="{Binding PixelStride1, Mode=TwoWay}"/>
							<TextBlock Classes="SessionControl_OptionsPanel_Item" IsVisible="{Binding IsAdjustableEffectiveBits1}" Text="{DynamicResource String.SessionControl.EffectiveBits}"/>
							<NumericUpDown Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" IsVisible="{Binding IsAdjustableEffectiveBits1}" Minimum="1" Value="{Binding EffectiveBits1, Mode=TwoWay}"/>
						</StackPanel>
					</Expander>
					<Border Classes="SessionControl_OptionsPanel_Separator" IsVisible="{Binding HasImagePlane1}"/>

					<!-- Plane options #2 -->
					<Expander Classes="SessionControl_OptionsPanel_Item" Header="{DynamicResource String.SessionControl.ImagePlaneOptions.2}" IsExpanded="True" IsVisible="{Binding HasImagePlane2}">
						<StackPanel Orientation="Vertical">
							<TextBlock Classes="SessionControl_OptionsPanel_Item" Text="{DynamicResource String.SessionControl.RowStride}"/>
							<NumericUpDown Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" Value="{Binding RowStride2, Mode=TwoWay}"/>
							<TextBlock Classes="SessionControl_OptionsPanel_Item" Text="{DynamicResource String.SessionControl.PixelStride}"/>
							<NumericUpDown Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" Value="{Binding PixelStride2, Mode=TwoWay}"/>
							<TextBlock Classes="SessionControl_OptionsPanel_Item" IsVisible="{Binding IsAdjustableEffectiveBits2}" Text="{DynamicResource String.SessionControl.EffectiveBits}"/>
							<NumericUpDown Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" IsVisible="{Binding IsAdjustableEffectiveBits2}" Minimum="1" Value="{Binding EffectiveBits2, Mode=TwoWay}"/>
						</StackPanel>
					</Expander>
					<Border Classes="SessionControl_OptionsPanel_Separator" IsVisible="{Binding HasImagePlane2}"/>

					<!-- Plane options #3 -->
					<Expander Classes="SessionControl_OptionsPanel_Item" Header="{DynamicResource String.SessionControl.ImagePlaneOptions.3}" IsExpanded="True" IsVisible="{Binding HasImagePlane3}">
						<StackPanel Orientation="Vertical">
							<TextBlock Classes="SessionControl_OptionsPanel_Item" Text="{DynamicResource String.SessionControl.RowStride}"/>
							<NumericUpDown Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" Value="{Binding RowStride3, Mode=TwoWay}"/>
							<TextBlock Classes="SessionControl_OptionsPanel_Item" Text="{DynamicResource String.SessionControl.PixelStride}"/>
							<NumericUpDown Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" Value="{Binding PixelStride3, Mode=TwoWay}"/>
							<TextBlock Classes="SessionControl_OptionsPanel_Item" IsVisible="{Binding IsAdjustableEffectiveBits3}" Text="{DynamicResource String.SessionControl.EffectiveBits}"/>
							<NumericUpDown Classes="SessionControl_OptionsPanel_Item" IsEnabled="{Binding IsSourceFileOpened}" IsVisible="{Binding IsAdjustableEffectiveBits3}" Minimum="1" Value="{Binding EffectiveBits3, Mode=TwoWay}"/>
						</StackPanel>
					</Expander>
					<Border Classes="SessionControl_OptionsPanel_Separator" IsVisible="{Binding HasImagePlane3}"/>

					<!-- Save profile -->
					<Button Classes="SessionControl_OptionsPanel_Item" Command="{Binding SaveProfileCommand}" Content="{DynamicResource String.SessionControl.SaveProfile}"/>

					<!-- Save as new profile -->
					<Button Classes="SessionControl_OptionsPanel_Item" Command="{Binding $parent[UserControl].SaveAsNewProfileCommand}" Content="{DynamicResource String.SessionControl.SaveAsNewProfile}"/>

					<!-- Delete profile -->
					<Button Classes="SessionControl_OptionsPanel_Item" Command="{Binding DeleteProfileCommand}" Content="{DynamicResource String.SessionControl.DeleteProfile}"/>
					
				</StackPanel>
			</ScrollViewer>
		</Border>

		<!-- Splitter -->
		<GridSplitter Background="{x:Static Brushes.Transparent}" Grid.Column="1"/>
		
	</Grid>
</UserControl>
