<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:app="clr-namespace:Carina.PixelViewer"
        xmlns:appControls="clr-namespace:Carina.PixelViewer.Controls"
        xmlns:appViewModels="clr-namespace:Carina.PixelViewer.ViewModels"
		xmlns:asControls="using:CarinaStudio.AppSuite.Controls"
		xmlns:asConverters="using:CarinaStudio.AppSuite.Converters"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Carina.PixelViewer.MainWindow"
		Classes="Tabbed"
		ExtendClientAreaTitleBarHeightHint="{Binding #tabControl.TabStripSize}"
        Icon="/Resources/AppIcon.ico"
		MinHeight="{DynamicResource Double/MainWindow.MinHeight}"
		MinWidth="{DynamicResource Double/MainWindow.MinWidth}">

	<!-- Data templates -->
	<Window.DataTemplates>
		<DataTemplate DataType="{x:Type appViewModels:Session}">
			<Grid Background="{x:Static Brushes.Transparent}" ColumnDefinitions="Auto,*,Auto">
				<Grid.ContextMenu>
					<ContextMenu PlacementMode="Bottom">
						<MenuItem Command="{Binding $parent[Window].SetCustomSessionTitle}" CommandParameter="{Binding $parent[TabItem]}" Header="{DynamicResource String/MainWindow.SetCustomSessionTitle}">
							<MenuItem.Icon>
								<Image Classes="MenuItem_Icon" Source="{DynamicResource Image/Icon.Edit}"/>
							</MenuItem.Icon>
						</MenuItem>
						<MenuItem Command="{Binding $parent[Window].ResetSessionTitle}" CommandParameter="{Binding $parent[TabItem]}" Header="{DynamicResource String/MainWindow.ResetSessionTitle}" IsEnabled="{Binding CustomTitle, Converter={x:Static asConverters:ValueToBooleanConverters.NonNullToTrue}}"/>
						<Separator/>
						<MenuItem Command="{Binding $parent[Window].MoveSessionToNewWorkspace}" CommandParameter="{Binding $parent[TabItem]}" Header="{DynamicResource String/Common.OpenInNewWindow}" IsEnabled="{Binding $parent[Window].HasMultipleSessions}">
							<MenuItem.Icon>
								<Image Classes="MenuItem_Icon" Source="{DynamicResource Image/Icon.AddWindow}"/>
							</MenuItem.Icon>
						</MenuItem>
						<Separator/>
						<MenuItem Command="{Binding $parent[Window].CloseMainTabItem}" CommandParameter="{Binding $parent[TabItem]}" Header="{DynamicResource String/Common.CloseTab}" InputGesture="Ctrl+W">
							<MenuItem.Icon>
								<Image Classes="MenuItem_Icon" Source="{DynamicResource Image/Icon.CloseTab}"/>
							</MenuItem.Icon>
						</MenuItem>
					</ContextMenu>
				</Grid.ContextMenu>
				<Panel Classes="TabItem_Icon">
					<Image Classes="Icon" Source="{DynamicResource Image/Icon.Tab}" IsVisible="{Binding !IsSourceFileOpened}"/>
					<Panel IsEnabled="{Binding !IsHibernated}" IsVisible="{Binding IsSourceFileOpened}">
						<Image Classes="Icon" Source="{DynamicResource Image/Icon.Image}" IsVisible="{Binding InsufficientMemoryForRenderedImage}"/>
						<Image Classes="Icon" Source="{DynamicResource Image/Icon.Image.Active}" IsVisible="{Binding !InsufficientMemoryForRenderedImage}"/>
					</Panel>
				</Panel>
				<TextBlock Classes="TabItem_TextBlock" Grid.Column="1" Text="{Binding Title}" ToolTip.Tip="{Binding SourceFileName}"/>
				<Button Classes="TabItem_Button" Command="{Binding $parent[Window].CloseMainTabItem}" CommandParameter="{Binding $parent[TabItem]}" Grid.Column="2" ToolTip.Tip="{DynamicResource String/Common.CloseTab.WithGesture}">
					<Image Classes="Icon" Source="{DynamicResource Image/Icon.Close}"/>
				</Button>
			</Grid>
		</DataTemplate>
	</Window.DataTemplates>

	<!-- Resources -->
	<Window.Resources>

		<!-- Native menu -->
		<NativeMenu x:Key="nativeMenu">
			<NativeMenuItem Header="{DynamicResource String/MainWindow.Windows}">
				<NativeMenuItem.Menu>
					<NativeMenu>
						<NativeMenuItem Command="{Binding $self.CreateMainWindow}" Header="{DynamicResource String/Common.CreateWindow}" Gesture="Cmd+N"/>
						<NativeMenuItemSeparator/>
						<NativeMenuItem Command="{Binding $self.LayoutMainWindowsCommand}" CommandParameter="{x:Static asControls:MultiWindowLayout.Horizontal}" Header="{DynamicResource String/MainWindow.LayoutMainWindows.Horizontal}"/>
						<NativeMenuItem Command="{Binding $self.LayoutMainWindowsCommand}" CommandParameter="{x:Static asControls:MultiWindowLayout.Vertical}" Header="{DynamicResource String/MainWindow.LayoutMainWindows.Vertical}"/>
						<NativeMenuItem Command="{Binding $self.LayoutMainWindowsCommand}" CommandParameter="{x:Static asControls:MultiWindowLayout.Tile}" Header="{DynamicResource String/MainWindow.LayoutMainWindows.Tile}"/>
					</NativeMenu>
				</NativeMenuItem.Menu>
			</NativeMenuItem>
			<NativeMenuItem Header="{DynamicResource String/MainWindow.Tabs}">
				<NativeMenuItem.Menu>
					<NativeMenu>
						<NativeMenuItem Command="{Binding $self.CreateMainTabItem}" Header="{DynamicResource String/Common.CreateTab}"  Gesture="Cmd+T"/>
						<NativeMenuItemSeparator/>
						<NativeMenuItem Command="{Binding $self.SetCurrentCustomSessionTitle}" Header="{DynamicResource String/MainWindow.SetCustomSessionTitle}"/>
						<NativeMenuItem Command="{Binding $self.ResetCurrentSessionTitle}" Header="{DynamicResource String/MainWindow.ResetSessionTitle}" IsEnabled="{Binding ActivatedSession.CustomTitle, Converter={x:Static asConverters:ValueToBooleanConverters.NonNullToTrue}}"/>
						<NativeMenuItemSeparator/>
						<NativeMenuItem Command="{Binding $self.MoveCurrentSessionToNewWorkspace}" Header="{DynamicResource String/Common.OpenInNewWindow}" IsEnabled="{Binding $self.HasMultipleSessions}"/>
						<NativeMenuItemSeparator/>
						<NativeMenuItem Command="{Binding $self.CloseCurrentMainTabItem}" Header="{DynamicResource String/Common.CloseTab}"/>
					</NativeMenu>
				</NativeMenuItem.Menu>
			</NativeMenuItem>
		</NativeMenu>

	</Window.Resources>

	<!-- Layout -->
	<Border Name="baseBorder">
		<asControls:TabControl Name="tabControl" DragDrop.AllowDrop="True" DragLeaveItem="OnDragLeaveTabItem" DragOverItem="OnDragOverTabItem" DropOnItem="OnDropOnTabItem" ItemDragged="OnTabItemDragged" Padding="0">

			<!-- New tab -->
			<TabItem Classes="Empty">
				<TabItem.Header>
					<Button Classes="AddTabItem" Command="{Binding $parent[Window].CreateMainTabItem}">
						<Image Classes="Icon" Source="{DynamicResource Image/Icon.Add}"/>
					</Button>
				</TabItem.Header>
			</TabItem>

		</asControls:TabControl>
	</Border>
	
</Window>
